---
- name: Get latest k3s version
  ansible.builtin.uri:
    url: "{{ k3s_latest_version_url }}"
    method: GET
    return_content: true
    status_code: 200
    body_format: json
  register: _k3s_latest
  when: k3s_version == "latest"

- name: Use latest k3s version
  ansible.builtin.set_fact:
    _k3s_version: "{{ _k3s_latest.json.tag_name | regex_replace('^v?(.*)$', '\\1') }}"
  when: k3s_version == "latest"

- name: Use static k3s version
  ansible.builtin.set_fact:
    _k3s_version: "{{ k3s_version }}"
  when: k3s_version != "latest"

- name: Install k3s executable
  ansible.builtin.get_url:
    url: "{{ k3s_binary_url }}"
    dest: /usr/local/bin/k3s
    checksum: >-
      {{ 'sha256:' +
      ((lookup('url', k3s_checksums_url, wantlist=True) |
      select('search', 'k3s$'))[0].split(' ')[0]
      if k3s_checksum == "" else k3s_checksum) }}
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  notify: restart k3s

- name: Create k3s directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  loop:
    - /etc/rancher
    - /etc/rancher/k3s

- name: Install k3s systemd service
  ansible.builtin.template:
    src: k3s.service
    dest: /etc/systemd/system/k3s.service
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  notify: restart k3s

- name: Start and enable k3s
  ansible.builtin.systemd:
    name: k3s
    daemon_reload: yes
    enabled: yes
    state: started
